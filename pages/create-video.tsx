import React, { useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Layout from '../components/Layout';
import Navbar from '../components/Navbar';
import { Box, Typography, Button } from '@mui/material';
import ScriptInput from '../components/Inputs/ScriptInput';
import AudioInput from '../components/Inputs/AudioInput';
import UseImagesInput from '../components/Inputs/UseImagesInput';
import { useRouter } from 'next/router';
import axios from 'axios';

export enum AudioOption {
  Computer = 'COMPUTER',
  Custom = 'CUSTOM',
}
export enum ImagesOption {
  Google = 'GOOGLE',
  Custom = 'CUSTOM',
}
export enum ImageRights {
  Any = 'any',
  LabeledForReuseWithModifications = 'labeled-for-reuse-with-modifications',
  LabeledForReuse = 'labeled-for-reuse',
  LabeledForNonCommercialReuseWithModification = 'labeled-for-noncommercial-reuse-with-modification',
  LabeledForNoCommercialReuse = 'labeled-for-nocommercial-reuse',
}

const CreateVideo: NextPage = () => {
  const router = useRouter();
  const [audioOption, setAudioOption] = useState<AudioOption>(
    AudioOption.Computer
  );
  const [imagesOption, setImagesOption] = useState<ImagesOption>(
    ImagesOption.Google
  );
  const [transcript, setTranscript] = useState<File | null>(null);
  const [audio, setAudio] = useState<File | null>(null);
  const [imageRights, setImageRights] = useState<ImageRights>(ImageRights.Any);

  const submitHandler = async () => {
    const formData = new FormData();
    formData.append(
      'use_audio',
      (audioOption === AudioOption.Custom).toString()
    );
    formData.append(
      'use_images',
      (imagesOption === ImagesOption.Custom).toString()
    );
    formData.append('usage_rights', imageRights);
    if (transcript !== null) {
      formData.append('transcript', transcript);
    }
    if (audioOption === AudioOption.Custom) {
      if (audio !== null) {
        formData.append('audio', audio);
      } else {
        //TODO: set up error handling
      }
    }
    const { data } = await axios.post(
      `${process.env.NEXT_PUBLIC_API_URL}/upload-images`,
      formData,
      {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      }
    );
    if (imagesOption === ImagesOption.Custom) {
      router.push('/upload-images');
    } else {
      router.push(`/show-video/${data}`);
    }
  };
  return (
    <>
      <Head>
        <title>Create Video</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar isCreateVideo />
      <main>
        <Layout>
          <Box
            sx={{
              display: 'flex',
              flexDirection: 'column',
              width: '100%',
              alignItems: 'center',
            }}
          >
            <Box>
              <Typography variant="h1">
                Create Your Slideshow Video
                <br />{' '}
                <Box component="span" sx={{ color: 'primary.main' }}>
                  In 3 Easy Steps
                </Box>
              </Typography>
              <Typography variant="subtitle1">
                First time using WriteMyVideo? Check out our tutorial!
              </Typography>
            </Box>
            <Box>
              <ScriptInput setTranscript={setTranscript} />
              <AudioInput
                audioOption={audioOption}
                setAudioOption={setAudioOption}
                setAudio={setAudio}
              />
              <UseImagesInput
                imagesOption={imagesOption}
                setImagesOption={setImagesOption}
                imageRights={imageRights}
                setImageRights={setImageRights}
              />
            </Box>
            <Box>
              <Button
                variant="contained"
                size="large"
                sx={{
                  borderRadius: '40px',
                  fontSize: '1.25rem',
                }}
                onClick={submitHandler}
              >
                Create My Video
              </Button>
            </Box>
          </Box>
        </Layout>
      </main>
    </>
  );
};

export default CreateVideo;
